#!/bin/bash
#
# This is a wrapper around ansible / ansible-playbook.
#
# Usage ("ansible" mode):
#
#   ./reservasible -m raw all -a 'date'
#
# Usage ("ansible-playbook" mode):
#
#   ./reservasible -l prod
#
#
# If you are unfamiliar with Ansible, read up on it at
# - https://www.ansible.com/overview/how-ansible-works
# - https://github.com/jdauphant/awesome-ansible

cd "$(dirname "$0")"; cd "$(/bin/pwd)"

ensure_ansible () {
    if ! test -f ansible-deps-cache/.versions 2>/dev/null; then
        curl https://raw.githubusercontent.com/epfl-si/ansible.suitcase/master/install.sh | \
            SUITCASE_DIR=$PWD/ansible-deps-cache \
            SUITCASE_ANSIBLE_VERSION=7.1.0 \
            SUITCASE_PIP_EXTRA="kubernetes" \
            SUITCASE_ANSIBLE_REQUIREMENTS=requirements.yml \
            bash -x
    fi

    . "$PWD"/ansible-deps-cache/lib.sh
    ensure_ansible_runtime
}

inventories () {
    echo "-i inventory.yml"
}

ensure_docker_login_with_oc_credentials () {
    [ -n "$schnell" ] && return 0
    ensure_oc_login
    GASPAR="$(oc whoami)"
    echo >&2 "Logging in to os-docker-registry.epfl.ch using the OpenShift token..."
    docker login os-docker-registry.epfl.ch -u $GASPAR -p "$(oc whoami -t)"
}

###########################################################################

set -e

ensure_ansible

mode=ansible-playbook
declare -a ansible_args
ansible_args=(-e "resasible_dir=$OLDPWD")

while [ "$#" -gt 0 ]; do
  case "$1" in
        -m) mode=ansible
            ansible_args+=("-m")
            shift ;;
        --schnell)
            schnell=1
            shift ;;
        *)
            ansible_args+=("$1")
            shift ;;
    esac
done

ensure_docker_login_with_oc_credentials

case "$mode" in
    ansible-playbook)
        ansible-playbook $playbook_flags $(inventories) "${ansible_args[@]}" \
                         playbook.yml
        ;;
    ansible)
        ansible $(inventories) "${ansible_args[@]}"
        ;;
esac
