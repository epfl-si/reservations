#!/usr/bin/perl
#
##############################################################################
#
# Author:       Ion CIONCA (Ion.Cionca@epfl.ch) - 2018
#
#########################################################################
#####
#
#

use strict;

use lib '/opt/dinfo/lib/perl';

use CGI;
use Net::LDAPS;
use Mail::Sendmail;

use Cadi::CadiDB;
use Cadi::WSUtils;

my $pi = $ENV {PATH_INFO};

warn "--> start probe from $ENV{REMOTE_ADDR} : pathinfo=$pi\n";

my $config_items = {
		accreddb => { active => '1', critical => 'true', label => 'mysql accred/dinfo db access',},
		resdb		 => { active => '1', critical => 'true', label => 'mysql reservations db access',},
};

my $probe ;
   $probe->{status} = 'ok';

my $sciper = '100000';

if ( $pi =~ /usage/ ) {
	my $return = {  
		status => 'ok', 
		usage  => qq{https://$ENV{SERVER_NAME}/probe - returns status : ok | ko 
		},
	} ;
	Cadi::WSUtils::json_response ( { probe => $return, } );
	exit;
}	

foreach my $key ( keys %$config_items ) {
	my $item = $config_items->{$key};
	next unless $item->{active};

	$probe->{$key}->{status} = 'ko';

	if ( $key eq 'resdb' ) {
		my $dbh = new Cadi::CadiDB (
			dbname => 'reservations',
			 trace => 1,
		) ;
		
		if ( $dbh ) {
			my $sql = qq{SELECT * FROM reservations.obj LIMIT 0, 10};
			my $sth = $dbh->prepare( $sql) ;

			if ($sth) {
				$sth->execute () ;
				my $sciper = $sth->fetchrow;
				$probe->{$key}->{action} = "SELECT * FROM reservations.obj";
				if ( $sciper eq $sciper ) {
					$probe->{$key}->{status} = 'ok';
				} else {
					$probe->{$key}->{status} = 'ko';
				}
			}
		}
	}
	if ( $key eq 'accreddb' ) {
		my $dbh = new Cadi::CadiDB (
			dbname => 'dinfo',
			 trace => 1,
			utf8 => 1,
		) ;
		if ( $dbh ) {
			my $sql = qq{SELECT sciper FROM dinfo.sciper where sciper=$sciper LIMIT 0, 10};
			my $sth = $dbh->prepare( $sql) ;
			if ($sth) {
				$sth->execute () ;
				my $sciper = $sth->fetchrow;
				$probe->{$key}->{action} = "get sciper $sciper from dinfo.sciper";
				if ( $sciper eq $sciper ) {
					$probe->{$key}->{status} = 'ok';
				} else {
					$probe->{$key}->{status} = 'ko';
				}
			}
		}
	}
	if ( $key eq 'translate' ) {
		my $text_fr	= qq{Crevettes sauvages au pesto d'ail des ours};
		my $text_en	= rest_tools::translate($text_fr);
		$probe->{$key}->{status} = $text_en ? 'ok' : 'ko';
		$probe->{$key}->{action} = "google translate : $text_fr => $text_en";
	}
			
	$probe->{$key}->{label} 		= $item->{label};
	$probe->{$key}->{critical} = $item->{critical};

	unless ( $probe->{$key}->{status} eq 'ok' ) {
		$probe->{status} = $item->{critical} eq 'true' ? 'ko' : 'warning';
	}
}

if ( $probe->{status} ne 'ko' ) {
	print "Status: 200 OK\r\n";
} else {
		print "Status: 503 Service Unavailable\r\n";
}

if ( $pi =~ /verbose/ ) {
	Cadi::WSUtils::json_response ( $probe );
} else {
	print "Content-Type: text/html\r\n\r\n";
}

exit;
