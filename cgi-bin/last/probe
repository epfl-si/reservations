#!/usr/bin/perl
#
##############################################################################
#
# Author:       Ion CIONCA (Ion.Cionca@epfl.ch) - 2018
#
#########################################################################
#####
#
#

use strict;

use lib '/opt/dinfo/lib/perl';

use CGI;
use Cadi::CadiDB;
use Cadi::WSUtils;

my $pi 			= $ENV {PATH_INFO};
my $DEBUG		= -f '/opt/dinfo/etc/MASTER' ? 0 : 1;
my $verbose = $DEBUG;

warn "--> start probe from $ENV{REMOTE_ADDR} : pathinfo=$pi\n";

my $config_items = {
		accreddb  => { active => '1', critical => 'true',  label => 'mysql accred/dinfo db access',},
		resdb		  => { active => '1', critical => 'true',  label => 'mysql reservations db access',},
};
my $q = CGI->new; 

my $probe ;
   $probe->{status} = 'ok';

my $metrics;
my $line = $DEBUG ? 'test' : 'prod';
foreach my $key ( keys %$config_items ) {
	my $item = $config_items->{$key};
	next unless $item->{active};

	$probe->{$key}->{status} = 'ko';

	my $sql;
	my $dbname;
	if ( $key eq 'bottindb' ) {
		$dbname = 'bottin';
		$sql = qq{SELECT * from bottin.annuaire_persphones LIMIT 0, 1};
	} else {
		$dbname = 'dinfo';
		$sql = qq{SELECT * from dinfo.sciper LIMIT 0, 1};
	}
	my $dbh = new Cadi::CadiDB (
		dbname => $dbname,
		 trace => 1,
	) ;
	
	if ( $dbh ) {
		my $sth = $dbh->prepare( $sql) or die "**ERR PREPARE $key";
		if ($sth) {
			if($sth->execute ()) {
				$probe->{items}->{$key}->{status} = 'ok';
			} else {
			}
		}
	}		

warn "    probe $key : status=$probe->{items}->{$key}->{status}\n" if $verbose;
	my $item_status = $probe->{items}->{$key}->{status} eq 'ok' ? '1' : '0';
	$metrics .= qq{reservations_status{component="$key", critical="$item->{critical}", line="$line"} $item_status\n};

	$probe->{$key}->{label} 	 = $item->{label};
	$probe->{$key}->{critical} = $item->{critical};
	unless ( $probe->{items}->{$key}->{status} eq 'ok' ) {
		$probe->{status} = $item->{critical} ? 'ko' : 'warning';
	}
}

warn "--> probe : $probe->{status}\n" if $verbose;

	if ( $q->param('metrics') ) {
		my $probe_status = $probe->{status} eq 'ko' ? '0' : '1';
		$metrics = qq{# HELP reservations_status service status: 1=OK, 0=KO
# TYPE reservations_status gauge
reservations_status{component="global", line="$line"} $probe_status
$metrics};
		print "Content-Type: text\r\n\r\n";
		print $metrics ;
		exit;
	}
	
	if ( $probe->{status} ne 'ko' ) {
		print "Status: 200 OK\r\n";
	} else {
		print "Status: 503 Service Unavailable\r\n";
	}
		print "Content-Type: text\r\n\r\n";
	exit;

	if ( $q->param('verbose') ) {
		Cadi::WSUtils::json_response ( $probe );
	} else {
		print "Content-Type: text/html\r\n\r\n";
	}

	exit;
